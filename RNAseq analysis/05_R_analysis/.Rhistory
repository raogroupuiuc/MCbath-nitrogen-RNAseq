getwd()
setwd("D:/Box Sync/02 - RNA seq work/2002-Methylococcus_bath_rnaseq/2021/05_R_analysis/")
options(stringsAsFactors = FALSE)
library(edgeR)
library(statmod)
library(affycoretools)
library(limma)
library(gplots)
library(rgl)
library(Glimma)
library(rtracklayer)
library(sva)
library(ggplot2)
library(PCAtools)
load("2021-10-22-05-after-OutConts.Rdata")
fit2
x11()
layout(matrix(2:1,1,2)) #this divides the graph into 2 parts
vennDiagram(decideTests(fit2[,c(1:4)]), include = "down", main = "Downregulated genes", circle.col = c("red", "blue", "green3"))
vennDiagram(decideTests(fit2[,c(1:4)]), include = "up", main = "Upregulated genes", circle.col = c("red", "blue", "green3"))
x11(w = 12, h = 7)
layout(matrix(2:1,1,2)) #this divides the graph into 2 parts
vennDiagram(decideTests(fit2[,c(1:4)]), include = "down", main = "Downregulated genes", circle.col = c("red", "blue", "green3"))
vennDiagram(decideTests(fit2[,c(1:4)]), include = "up", main = "Upregulated genes", circle.col = c("red", "blue", "green3"))
x11(w = 12, h = 7)
layout(matrix(2:1,1,2)) #this divides the graph into 2 parts
vennDiagram(decideTests(fit2[,c(1:4)]), include = "down", main = "Downregulated genes", circle.col = c("red", "blue", "green3", "yellow"))
vennDiagram(decideTests(fit2[,c(1:4)]), include = "up", main = "Upregulated genes", circle.col = c("red", "blue", "green3", "yellow"))
# dev.off()
x11(w = 12, h = 6)
layout(matrix(2:1,1,2)) #this divides the graph into 2 parts
vennDiagram(decideTests(fit2[,c(1:4)]), include = "down", main = "Downregulated genes", circle.col = c("red", "blue", "green3", "yellow"))
vennDiagram(decideTests(fit2[,c(1:4)]), include = "up", main = "Upregulated genes", circle.col = c("red", "blue", "green3", "yellow"))
x11(w = 12, h = 6)
layout(matrix(2:1,1,2)) #this divides the graph into 2 parts
vennDiagram(decideTests(fit2[,c(1:4)]), include = "down", main = "Downregulated genes") #, circle.col = c("red", "blue", "green3", "yellow"))
vennDiagram(decideTests(fit2[,c(1:4)]), include = "up", main = "Upregulated genes") #, circle.col = c("red", "blue", "green3", "yellow"))
# dev.off()
jpeg("All.jpeg", width=12, height=6, units="in", res=300, quality=100)
layout(matrix(2:1,1,2)) #this divides the graph into 2 parts
vennDiagram(decideTests(fit2[,c(1:4)]), include = "down", main = "Downregulated genes") #, circle.col = c("red", "blue", "green3", "yellow"))
vennDiagram(decideTests(fit2[,c(1:4)]), include = "up", main = "Upregulated genes") #, circle.col = c("red", "blue", "green3", "yellow"))
setEPS()
postscript("venn_all.eps", width = 12, height = 6)
layout(matrix(2:1,1,2)) #this divides the graph into 2 parts
vennDiagram(decideTests(fit2[,c(1:4)]), include = "down", main = "Downregulated genes") #, circle.col = c("red", "blue", "green3", "yellow"))
vennDiagram(decideTests(fit2[,c(1:4)]), include = "up", main = "Upregulated genes") #, circle.col = c("red", "blue", "green3", "yellow"))
dev.off()
jpeg("All.jpeg", width=12, height=6, units="in", res=300, quality=100)
layout(matrix(2:1,1,2)) #this divides the graph into 2 parts
vennDiagram(decideTests(fit2[,c(1:4)]), include = "down", main = "Downregulated genes") #, circle.col = c("red", "blue", "green3", "yellow"))
vennDiagram(decideTests(fit2[,c(1:4)]), include = "up", main = "Upregulated genes") #, circle.col = c("red", "blue", "green3", "yellow"))
dev.off()
setEPS()
postscript("venn_all.eps", width = 12, height = 6)
layout(matrix(2:1,1,2)) #this divides the graph into 2 parts
vennDiagram(decideTests(fit2[,c(1:4)]), include = "down", main = "Downregulated genes", circle.col = c("red", "blue", "green3", "yellow"))
vennDiagram(decideTests(fit2[,c(1:4)]), include = "up", main = "Upregulated genes", circle.col = c("red", "blue", "green3", "yellow"))
dev.off()
jpeg("All.jpeg", width=12, height=6, units="in", res=300, quality=100)
# setEPS()
# postscript("venn_all.eps", width = 12, height = 6)
layout(matrix(2:1,1,2)) #this divides the graph into 2 parts
vennDiagram(decideTests(fit2[,c(1:4)]), include = "down", main = "Downregulated genes", circle.col = c("red", "blue", "green3", "yellow"))
vennDiagram(decideTests(fit2[,c(1:4)]), include = "up", main = "Upregulated genes", circle.col = c("red", "blue", "green3", "yellow"))
dev.off()
setEPS()
postscript("PCA_nicer.eps", width = 5, height = 6)
biplot(test_new, #xlim = c(-50,50), ylim = c(-40,50),
lab = d.filt$samples$group,
pointSize = 4, gridlines.major = FALSE, gridlines.minor = FALSE)
dev.off()
x11()
vennDiagram(decideTests(fit2[,c(1:4)]), circle.col = c("red", "blue", "green3", "yellow"))
jpeg("All_combined.jpeg", width=6, height=6, units="in", res=300, quality=100)
# setEPS()
# postscript("venn_all.eps", width = 12, height = 6)
layout(matrix(2:1,1,2)) #this divides the graph into 2 parts
dev.off()
jpeg("All_combined.jpeg", width=6, height=6, units="in", res=300, quality=100)
# setEPS()
# postscript("venn_all.eps", width = 12, height = 6)
vennDiagram(decideTests(fit2[,c(1:4)]), circle.col = c("red", "blue", "green3", "yellow"))
dev.off()
setEPS()
postscript("venn_all_combined.eps", width = 12, height = 6)
vennDiagram(decideTests(fit2[,c(1:4)]), circle.col = c("red", "blue", "green3", "yellow"))
dev.off()
setEPS()
postscript("Heatmap_overall_clustered.eps", width = 6, height = 10)
heatmap.2(logCPM.heat, col=col.pan, Rowv=as.dendrogram(x.cluster.h1),Colv=FALSE, scale="none",
trace="none", dendrogram="row", cexRow=1, cexCol=0.9,labRow ="",
keysize = 0.8,lwid = c(1.4,4), lhei = c(0.8,4), colsep = c(3,6,9), sepcolor = "black",
margins = c(7,2),density.info = "none",
main = paste0("1-way ANOVA\nFDR < 0.05","\n",nrow(logCPM.heat), " genes" ))
dev.off()
#Read in targets file
library(magrittr)
library(RColorBrewer)
list = ls()
rm (list = ls())
getwd()
setwd("D:/Box Sync/02 - RNA seq work/2002-Methylococcus_bath_rnaseq/2021/04_Readfates/")
#Read in multQC output for STAR and featureCounts
reads <- read.delim("../Mapping summary.txt")
rownames(reads) <- reads$Sample
colnames(reads)
plotting <- reads[,c(1,3:12)]
colnames(plotting)
read.mapping <- plotting[,c(5,6)] / reads$trim_surv * 100
read.mapping$GC <- reads$GC_content
head(read.mapping)
read.count <- plotting[,c(8,10,11)] / plotting$bwa_map * 100
head(read.count)
getwd()
# jpeg("MC_mapping.jpeg", width = 8, height = 6, units = "in", res = 300, quality = 100)
setEPS()
postscript("MC_mapping.eps", width = 8, height = 6)
barplot( t(read.mapping[,c(3,1,2)]), beside = T, col = brewer.pal(n = 3, name="Set2"), las = 2, ylim = c(0,110), legend.text = F,
ylab = "Percent ", main = "Read mapping to genome - MCbath RNAseq", cex.names = 1,
names.arg = reads$Sample)
abline(h = 100, col = "gray")
legend ("topright", legend = c("GC content", "Mapped reads", "Unmapped reads"), col = brewer.pal(n = 3, name="Set2"), fill = brewer.pal(n = 3, name="Set2"), ncol = 3 )
dev.off()
# jpeg("MC_alignment.jpeg", width = 8, height = 6, units = "in", res = 300, quality = 100)
setEPS()
postscript("MC_alignment.eps", width = 8, height = 6)
barplot( t(read.count), beside = F, col = brewer.pal(n = 5, name="Set2"), las = 2, ylim = c(0,110), legend.text = F,
ylab = "Percent of mapped reads", main = "Read alignment to genomic features - MCbath RNAseq", cex.names = 1,
names.arg = reads$Sample)
abline(h = seq(0,100, by = 10), col = "gray")
legend ("topright", legend = c("In a gene", "Not in gene", "Ambiguous"), col = brewer.pal(n = 5, name="Set2"), fill = brewer.pal(n = 5, name="Set2"), ncol = 3 )
dev.off()
save.image("05_readfates.Rdata")
getwd()
setwd("D:/Box Sync/02 - RNA seq work/2002-Methylococcus_bath_rnaseq/2021/05_R_analysis/")
options(stringsAsFactors = FALSE)
# BiocManager::install("PCAtools")
# Load libraries ####
library(edgeR)
library(statmod)
library(affycoretools)
library(limma)
library(gplots)
library(rgl)
library(Glimma)
library(rtracklayer)
library(sva)
library(ggplot2)
library(PCAtools)
ls()
rm(list = ls())
load("2021-10-22-05-after-OutConts.Rdata")
fit
x11()
vennDiagram(decideTests(fit[,c(1:4)]), circle.col = c("red", "blue", "green3", "yellow"))
x11(w = 12, h = 6)
layout(matrix(2:1,1,2)) #this divides the graph into 2 parts
vennDiagram(decideTests(fit[,c(1:4)]), include = "down", main = "Downregulated genes", circle.col = c("red", "blue", "green3", "yellow"))
vennDiagram(decideTests(fit[,c(1:4)]), include = "up", main = "Upregulated genes", circle.col = c("red", "blue", "green3", "yellow"))
x11(w = 12, h = 6)
layout(matrix(2:1,1,2)) #this divides the graph into 2 parts
vennDiagram(decideTests(fit[,c(1:4)]), include = "down", main = "Downregulated genes", circle.col = c("red", "blue", "green3", "yellow"))
vennDiagram(decideTests(fit[,c(1:4)]), include = "up", main = "Upregulated genes", circle.col = c("red", "blue", "green3", "yellow"))
jpeg("All.jpeg", width=12, height=6, units="in", res=300, quality=100)
# setEPS()
# postscript("venn_all.eps", width = 12, height = 6)
layout(matrix(2:1,1,2)) #this divides the graph into 2 parts
vennDiagram(decideTests(fit[,c(1:4)]), include = "down", main = "Downregulated genes", circle.col = c("red", "blue", "green3", "yellow"))
vennDiagram(decideTests(fit[,c(1:4)]), include = "up", main = "Upregulated genes", circle.col = c("red", "blue", "green3", "yellow"))
dev.off()
jpeg("All_combined.jpeg", width=6, height=6, units="in", res=300, quality=100)
# setEPS()
# postscript("venn_all_combined.eps", width = 12, height = 6)
vennDiagram(decideTests(fit[,c(1:4)]), circle.col = c("red", "blue", "green3", "yellow"))
dev.off()
setEPS()
postscript("venn_all.eps", width = 12, height = 6)
layout(matrix(2:1,1,2)) #this divides the graph into 2 parts
vennDiagram(decideTests(fit[,c(1:4)]), include = "down", main = "Downregulated genes", circle.col = c("red", "blue", "green3", "yellow"))
vennDiagram(decideTests(fit[,c(1:4)]), include = "up", main = "Upregulated genes", circle.col = c("red", "blue", "green3", "yellow"))
dev.off()
# jpeg("All_combined.jpeg", width=6, height=6, units="in", res=300, quality=100)
setEPS()
postscript("venn_all_combined.eps", width = 12, height = 6)
vennDiagram(decideTests(fit[,c(1:4)]), circle.col = c("red", "blue", "green3", "yellow"))
dev.off()
# jpeg("All_combined.jpeg", width=6, height=6, units="in", res=300, quality=100)
setEPS()
postscript("venn_all_combined.eps", width = 6, height = 6)
vennDiagram(decideTests(fit[,c(1:4)]), circle.col = c("red", "blue", "green3", "yellow"))
dev.off()
getwd()
setwd("D:/Box Sync/02 - RNA seq work/2002-Methylococcus_bath_rnaseq/2021/05_R_analysis/")
options(stringsAsFactors = FALSE)
# BiocManager::install("PCAtools")
# Load libraries ####
library(edgeR)
library(statmod)
library(affycoretools)
library(limma)
library(gplots)
library(rgl)
library(Glimma)
library(rtracklayer)
library(sva)
library(ggplot2)
library(PCAtools)
# library(WGCNA)
ls()
rm(list = ls())
load("2021-10-22-05-after-OutConts.Rdata")
jpeg("All_compared.jpeg", width=12, height=6, units="in", res=300, quality=100)
# setEPS()
# postscript("venn_all.eps", width = 12, height = 6)
layout(matrix(2:1,1,2)) #this divides the graph into 2 parts
vennDiagram(decideTests(fit2[,c(1:4)]), include = "down", main = "Downregulated genes", circle.col = c("red", "blue", "green3", "yellow"))
vennDiagram(decideTests(fit2[,c(1:4)]), include = "up", main = "Upregulated genes", circle.col = c("red", "blue", "green3", "yellow"))
dev.off()
jpeg("All_combined_compared.jpeg", width=6, height=6, units="in", res=300, quality=100)
# setEPS()
# postscript("venn_all_combined.eps", width = 6, height = 6)
vennDiagram(decideTests(fit2[,c(1:4)]), circle.col = c("red", "blue", "green3", "yellow"))
dev.off()
jpeg("All.jpeg", width=12, height=6, units="in", res=300, quality=100)
# setEPS()
# postscript("venn_all.eps", width = 12, height = 6)
layout(matrix(2:1,1,2)) #this divides the graph into 2 parts
vennDiagram(decideTests(fit[,c(1:4)]), include = "down", main = "Downregulated genes", circle.col = c("red", "blue", "green3", "yellow"))
vennDiagram(decideTests(fit[,c(1:4)]), include = "up", main = "Upregulated genes", circle.col = c("red", "blue", "green3", "yellow"))
dev.off()
jpeg("All_combined.jpeg", width=6, height=6, units="in", res=300, quality=100)
# setEPS()
# postscript("venn_all_combined.eps", width = 6, height = 6)
vennDiagram(decideTests(fit[,c(1:4)]), circle.col = c("red", "blue", "green3", "yellow"))
dev.off()
setEPS()
postscript("venn_all_compared.eps", width = 12, height = 6)
layout(matrix(2:1,1,2)) #this divides the graph into 2 parts
vennDiagram(decideTests(fit2[,c(1:4)]), include = "down", main = "Downregulated genes", circle.col = c("red", "blue", "green3", "yellow"))
vennDiagram(decideTests(fit2[,c(1:4)]), include = "up", main = "Upregulated genes", circle.col = c("red", "blue", "green3", "yellow"))
dev.off()
# jpeg("All_combined.jpeg", width=6, height=6, units="in", res=300, quality=100)
setEPS()
postscript("venn_all_combined_compared.eps", width = 6, height = 6)
vennDiagram(decideTests(fit2[,c(1:4)]), circle.col = c("red", "blue", "green3", "yellow"))
dev.off()
getwd()
library(edgeR)
library(statmod)
library(affycoretools)
library(limma)
library(gplots)
library(rgl)
library(Glimma)
library(rtracklayer)
library(sva)
library(ggplot2)
library(PCAtools)
load("2021-10-22-05-after-OutConts.Rdata")
fit2
?decideTests
head(decideTests(fit2))
summary(decideTests(fit2))
summary(decideTests(fit2, p.value = 0.05))
head(logCPM.heat)
logCPM.heat.reorg <- logCPM.heat[,c(7:9, 1:3, 10:12, 4:6)]
head(logCPM.heat.reorg)
# x11(10,15)
jpeg("Heatmap_MC_bath_overall.jpeg", width = 6, height = 10, units = "in", res = 300, quality = 100)
heatmap.2(logCPM.heat.reorg, col=col.pan, Rowv=TRUE,Colv=FALSE, scale="none",
trace="none", dendrogram="none", cexRow=1, cexCol=0.9,labRow ="",
keysize = 0.8,lwid = c(1.4,4), lhei = c(0.8,4), colsep = c(3,6,9), sepcolor = "black",
margins = c(7,2),density.info = "none",
main = paste0("1-way ANOVA\nFDR < 0.05","\n",nrow(logCPM.heat), " genes" ))
dev.off()
# setEPS()
# postscript("Heatmap_overall_clustered.eps", width = 6, height = 10)
x11()
heatmap.2(logCPM.heat.reorgt, col=col.pan, Rowv=as.dendrogram(x.cluster.h1),Colv=FALSE, scale="none",
trace="none", dendrogram="none", cexRow=1, cexCol=0.9,labRow ="",
keysize = 0.8,lwid = c(1.4,4), lhei = c(0.8,4), colsep = c(3,6,9), sepcolor = "black",
margins = c(7,2),density.info = "none",
main = paste0("1-way ANOVA\nFDR < 0.05","\n",nrow(logCPM.heat), " genes" ))
heatmap.2(logCPM.heat.reorg, col=col.pan, Rowv=as.dendrogram(x.cluster.h1),Colv=FALSE, scale="none",
trace="none", dendrogram="none", cexRow=1, cexCol=0.9,labRow ="",
keysize = 0.8,lwid = c(1.4,4), lhei = c(0.8,4), colsep = c(3,6,9), sepcolor = "black",
margins = c(7,2),density.info = "none",
main = paste0("1-way ANOVA\nFDR < 0.05","\n",nrow(logCPM.heat), " genes" ))
jpeg("Heatmap_overall_clustered.jpeg", width = 6, height = 10, units = "in", res = 300, quality = 100)
heatmap.2(logCPM.heat.reorg, col=col.pan, Rowv=as.dendrogram(x.cluster.h1),Colv=FALSE, scale="none",
trace="none", dendrogram="none", cexRow=1, cexCol=0.9,labRow ="",
keysize = 0.8,lwid = c(1.4,4), lhei = c(0.8,4), colsep = c(3,6,9), sepcolor = "black",
margins = c(7,2),density.info = "none",
main = paste0("1-way ANOVA\nFDR < 0.05","\n",nrow(logCPM.heat), " genes" ))
dev.off()
setEPS()
postscript("Heatmap_overall_clustered.eps", width = 6, height = 10)
heatmap.2(logCPM.heat.reorg, col=col.pan, Rowv=as.dendrogram(x.cluster.h1),Colv=FALSE, scale="none",
trace="none", dendrogram="none", cexRow=1, cexCol=0.9,labRow ="",
keysize = 0.8,lwid = c(1.4,4), lhei = c(0.8,4), colsep = c(3,6,9), sepcolor = "black",
margins = c(7,2),density.info = "none",
main = paste0("1-way ANOVA\nFDR < 0.05","\n",nrow(logCPM.heat), " genes" ))
dev.off()
